Day 3:
	Desktop Applications
	Distributed Application
	Monolithic Architecture
	Microservices Architecture

	Why Cloud Computing ?
		SAAS
		PAAS
		IAAS
	Types of Cloud
		Public Cloud
		Private Cloud
		Hybrid Cloud
	 
	 Entities
	 ER Diagram


______________________________________________________________________________________________________________________________________________



Day 4:
	Session:

	Application Architecture:

	Physical Computing:

	Virtual Computing: in house virtualization
		Virtualization:
		
			 virtual machines are created with webserver , database server installation
			 on same physical infrastructure
		 Virtualization:
				VMware, Oracle Virtual box
				HyperV

	Cloud Computing:
			Public Cloud:
				
				Amazon Web services ( AWS)
					 will be able to support hosting your servers, services, applications
					 on Amazon datacenters


	Hands-On

	Introduction Jira (SAAS) for following Agile Methodology
	Scrum
	Github----Code repository

	Application Architecture
	

Application Architecture:

	Application = 
			Logic 	+  data

	Logic =(UI Logic  + Business Logic + DataAccess Logic) 
	Data  =( structured data , Non Structured data)


	Desktop application Architecture and Online Application Architecture


Online Application:

	    Web based Application
		    deployed on web and accessed by users from anywhere

		    ShoppingApplication------Web portal-- used remotely by endusers,
							                   vendors,
								           employees
Logic:
     UI Logic:

		 Web Pages +  HTML controls + Web Components (Angular)
		 Navigation : (UI Routing) HTML Links, Routing mechansim
		 Data Binding : DOM  + JSP tags (JSTL) + {{}} ngModel,
		 
		 Event Binding : 				action handlers
					
				 
			HTTP Request:	GET:----------------Doget
					POST:---------------Dopost
					PUT:
					DELETE:

              Client Side UI----------------HTML, CSS, javaScript, bootstrap
					        UI (Client Side UI Framework)
						Angular, React, Vue,..........

	Web Logic: ( Server Side processing)

		Server UI---------------- JSP, servelet,  ( classical java web technology)
				 spring MVC  ( to take advantage of MVC design Pattern using ready made frmwrk)
						 Model, View, Controller
						 Router
						 (SOA  layer)
						Spring Boot api
						CRUD REST API
						ORM Technique:Hibernate  ( ORM)
						       ,JPA
				         	JDBC  ( database Connectivity)
		State management
				
		 	Client Side state management
				cookies, querystring, form collection, hidden variables
				 local storage, session storage, Web sql, 

			Server Side state management
				session, Cache,
				database
	Business Logic:
		
	
		Java console application will be used to test your business Logic

		Core Java:

		will contain
		 1.business query processing
		 2.business operation managment
		 3.Business data manipulation
		
	   from online shopping point of view

		ProductCatalog
				: Product Inventory
					create, insert, delete,
				: Produdct Category 
					 get all
					 get by category
					
		 Shopping Cart:	
				Adding to cart
				Removing from cart
				getting all elemnt from cart
				 ,,,etc.
	
		

Data :
		 Structured Data
			 RDBMS
				fields
				tables
				contstraints

				Add some dummy records in your newly created database

				write  reusable SQL queries against those database tables to check bussiness Queries
				Test those SQL queries on existing dummy database you built
					

		 Unstrctured:

			 NoSQL
			 	Social Media
				 MongoDB
		 
_____________________________________________________________________________________________________________________________________


Desktop Application:
		
	   Standalone application
 	   deployed to stand alone computer accessed by user from that machine
 	    notepad---- text Editor- used by any user
	    Eclipse-----IDE tool --- used by developer

	(UI Logic  + Business Logic + DataAccess Logic) + ( structured data , Non Structured data)
	
	UI Logic:
		 UI forms +  UI controls
		 Navigation : (UI Routing) toolbar, status bar, Menu
		 Data Binding : data stored to be linked with UI elements
		 Event Binding : action.


	
	Java console application will be used to test your business Logic
	Core Java:

	Business Logic:
		
		 ProductCatalog
				: Product Inventory
					create, insert, delete,
				: Produdct Category 
					 get all
					 get by category
					
		 Shopping Cart:	
				Adding to cart
				Removing from cart
				getting all elemnt from cart
		
		 business query processing
		 business operation managment
		 Business data manipulation

	Data :
		 Structured Data
			 RDBMS
				fields
				tables
				contstraints

				Add some dummy records in your newly created database

				write  reusable SQL queries against those database tables to check bussiness Queries
				Test those SQL queries on existing dummy database you built
					

			 NoSQL
			 	Social Media
				 MongoDB


_______________________________________________________













	
