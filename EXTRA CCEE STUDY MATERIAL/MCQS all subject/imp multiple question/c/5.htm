<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0028)http://m108/exam/result.aspx -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<title>Result:- SunBeam Infotech Pvt LTD, Pune</title>
		<meta content="Microsoft Visual Studio .NET 7.1" name="GENERATOR">
		<meta content="C#" name="CODE_LANGUAGE">
		<meta content="JavaScript" name="vs_defaultClientScript">
		<meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
		<script language="JavaScript"> 
			var popup="Copyright 2005, SunBeam Infotech PVT. LTD.";
			function noway(go) 
			{
				if(document.all) 
				{
					if (event.button == 2) 
					{			
						alert(popup);
						return false;
					}
				}
				if (document.layers)
				{
					if (go.which == 3)
					{	
						alert(popup);
						return false;
					}
				} 
			}
			if(document.layers) 
			{ 
				document.captureEvents(Event.MOUSEDOWN);
			}
			document.onmousedown=noway;
			
			var debug = true;
			function right(e)
			{
				if (navigator.appName == 'Netscape' && (e.which == 3 || e.which== 2)) return false;
				else if (navigator.appName == 'Microsoft Internet Explorer' && (event.button == 2 || event.button == 3))
				{
					alert('Copyright 2005, SunBeam Infotech PVT. LTD.');
					return false;
				} 
				return true;
			} 
			document.onmousedown=right; 
			if (document.layers)
			window.captureEvents(Event.MOUSEDOWN);
			window.onmousedown=right;
			
			document.onkeydown = function ()
			{
				alert(popup);
				return false;
			}
			
			function blockMenu()
			{
				return false;
			}
			
		/*onselectstart="return false" onkeypress="return false" onkeydown="return false"
		ondragstart="return false" bottomMargin="0" leftMargin="0" topMargin="0" onload='setInterval("window.clipboardData.clearData()",20);document.attachEvent("oncontextmenu",blockMenu)'
		*/
		/*onselectstart="return false" onkeypress="return false"
		onkeydown="return false" ondragstart="return false" bottomMargin="0" leftMargin="0"
		topMargin="0" onload='setInterval("window.clipboardData.clearData()",20);document.attachEvent("oncontextmenu",blockMenu)'
		*/
		</script>
</head>
	<body rightmargin="0" ms_positioning="GridLayout" onselectstart="return false" onkeypress="return false" onkeydown="return false" ondragstart="return false" bottommargin="0" leftmargin="0" topmargin="0" onload="setInterval(&quot;window.clipboardData.clearData()&quot;,20);document.attachEvent(&quot;oncontextmenu&quot;,blockMenu)">
		<form name="Form1" method="post" action="./5_files/5.htm" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwtMjIwNjg5MjEzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47PjtsPHQ8cDxwPGw8V2lkdGg7XyFTQjs+O2w8MTw1MDBweD47aTwyNTY+Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDxIaSBkYWM0NiwgWW91IGhhdmUgc2NvcmVkIDogMDs+Pjs+Ozs+Oz4+Oz4+Oz7WbtweCT/Qd/vGnri6jjzF6ZsKfQ==">

			<table id="tblResult" cellspacing="0" cellpadding="0" border="0" height="26" width="500" style="Z-INDEX: 100; LEFT: 138px; POSITION: absolute; TOP: 128px">
	<tbody><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13910 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q1. Find the output 
<br>void main()
<br>{
<br>	 printf(”%d”);
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;garbage</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;-1</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;0</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;1</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13911 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q2. What is the output of the following programme ?
<br>void main()
<br>{
<br>static union myUnion
<br>{
<br>	int a;
<br>	float b;
<br>}mU1;
<br>
<br>clrscr();
<br>printf(“%5d”,mU1.a);
<br>getch();
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;garbage</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;100</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;0</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;compile time error</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13912 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q3. ## in ‘C’ language represents …..</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;There is nothing like ## in ‘C’ language</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;It indicates starting of the directive</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Token-Pasting Operator</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Starting of a macro code</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13913 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q4. What will be the output ?
<br>
<br>void main()
<br>{
<br>	int cnt;
<br>	extern int tmparray[5];
<br>        clrscr();
<br>        for(cnt=0;cnt&lt;5;cnt++)
<br>	printf(“%5d”,tmparray[cnt]);
<br>}
<br>int tmparray[5];
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;5 garbage values</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Compile time error</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Run time error</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;0 0 0 0	0</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13914 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q5. The operator ~ gives you ……..
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;2’s complement</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;1’s complement in 16 bits</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;1’s complement in 32 bits</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;1’s complement in 4 bits</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13915 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q6. What will be the output ?
<br>void main()
<br>{
<br>	char str[] = “Hello Everybody”;
<br>	clrscr();
<br>        printf(“%5s”,str);
<br>        getch();
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Hello</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Garbage</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Hello Everybody</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;compile time error</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13916 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q7. The function atoi() converts ……..</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;char array to integer number</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;int array to integer number</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;integer number to integer array</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;integer number to character array</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13917 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q8. The function malloc() returns an entity of type ……..</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;long </td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;void</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;void*</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;long*</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13925 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q9. Functions and global variables have _______ linkage.</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;internal</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;external</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;none</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;all of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13966 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q10. What would be output of the following program
<br>main()
<br>{
<br>	printf(5+”Sunbeam Infotech”);
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;am Infotech</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Sunbeam Infotech</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;error</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13967 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q11. find the output
<br>#include&lt; alloc.h &gt;
<br>#define MAXROW 3
<br>#define MAXCOL 4
<br>main()
<br>{
<br>        int (*p)[MAXCOL];
<br>	p = (int(*)[MAXCOL])malloc(MAXROW * sizeof(*p));
<br>	printf(“%d %d”,sizeof(p),sizeof(*p));
<br>
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;24  2 </td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;2  12</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;2  8</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;24  8</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13970 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q12. The bitwise AND operator is used for</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Masking</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Comparison</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Division</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Shifting bits</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13972 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q13. The associativity of ! operator is</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Right to Left</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Left to Right</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;(a) for Arithmetic and (b) for Relational</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;(a) for Relational and (b) for Arithmetic</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13973 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q14. What will be the output of the expression 11 ^ 5 </font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;5</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;6</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;11</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13974 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q15. The macro va_start is used to initialize a pointer to the beginning of the list of fixed arguments</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : F</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13975 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q16. Which header file should you include if you are to develop a function which can accept variable number of arguments?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;vararg.h </td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;stdlib.h</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;stdio.h</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;stdarg.h </td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13989 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q17. main()
<br>{
<br>     unsigned int a = 0xffff;
<br>     ~a;
<br>     printf("%x",a);
<br>}</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;ffff</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;0000</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;00ff</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14031 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q18. void main()
<br>{
<br>	int i;
<br>	printf(“%d”,i^i);
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;1</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;0</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Unexpected</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;runtime error</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14034 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q19. void main()
<br>{
<br>	char a[5*2/2] = {‘a’,’b’,’c’,’d’,’e’};
<br>	printf(“%c”,a[3]);
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;c</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;d</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;compilation error</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none of these</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14036 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q20. What would be the output of the following program
<br>#define MAX( a , b ) (a&gt;b ? a : b)
<br>void main()
<br>{
<br>	int x;
<br>	x = MAX (3+2,2+7);
<br>	printf(“%d”,x);
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;9</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;5</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;3</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;2</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14041 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q21. void main()
<br>{
<br>	char *buff;
<br>	buff = (char*)calloc(10);
<br>	printf(“Buff size = %d”,sizeof(buff));
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;2</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;10</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;20</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14048 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q22. A Link is</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;compiler</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;an active debugger</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;C interpreter</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;analyzing tool in C</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14049 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q23. The continue command cannot be used with</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;for</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;switch</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;do</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;while</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14051 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q24. Which is a good use for typecasting?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;To allow division of two integers to return a decimal value.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;To allow your program to use nothing but integers.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;To change the return type of a function.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;To swap variables rapidly.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14054 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q25. Which of the following is false?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;1</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;-1</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;.1</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14055 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q26. Evaluate !(1 &amp;&amp; !(0 || 1))</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14056 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q27. int main()
<br>{
<br>	unsigned int i;
<br>	int j;
<br>	i=1;
<br>	for(j=0;j&lt;2;j++)
<br>	{
<br>	i = i &lt;&lt; 1;
<br>	printf(“%d  ”,i);
<br>	}
<br>	for(j=0;j&lt;2;j++)
<br>	{
<br>	i = i &gt;&gt; 1;
<br>	printf(“%d  ”,i);
<br>	}
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;2  4
<br>2  1</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;2  4
<br>0  0</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;error</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;4  2
<br>1  2</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14067 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q28. Void main()
<br>{
<br>	 int al();
<br>	 int (*fp)();
<br>	 fp = al;
<br>	 (*fp)();
<br>}
<br>*fp()
<br>{
<br>	printf(“Pointers”);
<br>}
<br>al()
<br>{
<br>	printf(“Assignment”);
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Pointers</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Assignment Pointers</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Pointers Assignment</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Assignment</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14068 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q29. change(int *b)
<br>{
<br> 	int i;
<br>	for(i=0;i&lt;=4;i++)
<br>	{
<br>        	*b = *b + 1;
<br>		 b++;				
<br>	}
<br>}
<br>void main()
<br>{
<br>	int a[5] = {2,3,4,5,6},i;
<br>	change(a);
<br>	for(i=4;i&gt;=0;i--)
<br>	printf(“%d  ”,a[i]);
<br>}
<br>
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;2  3  4  5  6</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;3  7  6  5  4</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;7  6  5  4  3</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Lvalue required in function change</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14072 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q30. void main()
<br>{
<br>	char s[] = “\12345s\n”;
<br>	printf(“%d”,sizeof(s));
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;9</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;4</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;8</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;6</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14112 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q31. To delete forth node in double link list representation of five nodes, we require to locate</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;header node</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;third node</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;third node and forth node</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;only the forth node</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14116 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q32. struct temp
<br>{
<br>	int a;
<br>	struct temp no_roll;
<br>	double c;
<br>}obj;
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Underscore cannot be used in variable declaration.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;it will be compiled successfully.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;obj must be a pointer to struct</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;error: struct variables cannot be included in its own structure</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14117 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q33. Let sizeof(int) = 4 and sizeof(long) = 8
<br>What will be the sizeof(struct SUN);
<br>Struct SUN
<br>{
<br>int XML[2];
<br>union 
<br>{
<br>	char ITS[7];
<br>	int practice;
<br>}student;
<br>long VB;
<br>char Java;
<br>};
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;32</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;28</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;24</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;system dependent</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14119 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q34. int takefirst(int a,int b,int c)
<br>{
<br>	return (++a,b+2,c);
<br>}
<br>void main( )
<br>{
<br>	static int m,n;
<br>	m = takefirst(n,m,n);
<br>	printf(“%d”,m);
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;2</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;1</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;0</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;syntax error in the return statement</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14125 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q35. Recursion technique uses data structure</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;stack</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;queue</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;heap</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;linked list</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14127 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q36. A circular link representation with n nodes will have – links
<br>
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;n+1</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;n+2</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;n</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;n-1</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14129 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q37. struct node
<br>{
<br>	int data;
<br>	struct node *llink;
<br>	struct node *rlink;
<br>};
<br>This structure can be used for
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;singly linked list</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;doubly linked list</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;doubly circular list</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;2 and 3 both</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14130 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q38. Pointer of singly circular list with only one node will point to---</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;next node</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;previous node</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;same node</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;NULL</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14133 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q39. What do you think is true about queue data structure?
<br>i. it is a LILO data structure
<br>ii. elements from queue are deleted from the rear end
<br>iii. we can design a circular queue
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;i and ii</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;i and iii</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;i, ii and iii</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;i only</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14135 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q40. void main( )
<br>{
<br>	enum days{mon,tue,wed,sat,sun     };
<br>	enum days d1,d2,d3;
<br>	d1 = mon + sun;
<br>	d2 = wed – sat;
<br>	d3 = sun * tue;
<br>	printf(“%d  %d  %d”,d1,d2,d3);
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;4 -1  4</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;1  5  5</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;0  4  4</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;compilation error</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14138 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q41. enum records{one,two=4,three,four=4};
<br>void main( )
<br>{
<br>	printf(“%d  %d  %d  %d”, one,two,three,four);
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;0  4  5  4</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;1  4  3  4</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;1  4  5  4</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;0  4  3  4</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14139 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q42. What is true regarding a return statement in a function?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;There cannot be more than one return statement in a function</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;A return statement must be at the end of the function</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;A function by default returns an integer value. </td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;All of the above are true</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14189 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q43. What keyword covers unhandled possibilities?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;all</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;contingency</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;default</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;other</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14190 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q44. Which of the following gives the memory address of a pointer a?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;a</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;*a</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;&amp;a</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;address(a)</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14191 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q45. Which of the following is the proper keyword to deallocate  
<br>memory?
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;free</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;delete</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;clear</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;remove</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14194 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q46. Which header file do you need to include to use typecasting? </font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;iostream.h</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;ctype.h</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;math.h</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14195 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q47. find the output:
<br>	void sp_to_dash(const char *str);
<br>	int main(void)
<br>	{
<br>		sp_to_dash(“This is a test”);
<br>		return 0;
<br>	}
<br>	void sp_to_dash(const char *str)
<br>	{
<br>		while(*str)	
<br>		{
<br>			if(*str==’ ‘) *str = ‘-‘;
<br>			printf(“%c”,*str);
<br>			str++;
<br>		} }
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;This-is-a-test</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Error message</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;This is a test</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;None of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14203 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q48. Why can typecasting be dangerous?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Some conversions are not defined, such as char to int.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;You might permanently change the value of the variable.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;You might temporarily lose part of the data - such as truncating a float when typecasting to an int.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;There are no dangers.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14218 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q49. Which of the following is a properly defined struct?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;struct {int a;}</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;struct a_struct {int a;}</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;struct a_struct int a;</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;struct a_struct {int a;};</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14223 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q50. The number of the relational operators in c language is </font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;four</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;six</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;three</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;one</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14229 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q51. Which among the following is a unconditional control structure</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;do-while</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;if-else</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;goto</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;for</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14230 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q52. The output of printf("%u", -1) is</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;-1</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;minimum int value</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;maximum int value</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;error message</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14303 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q53. Which of the following are tokens in C?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;keywords</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;variables</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;constants</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;all of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14367 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q54. void main( )
<br>{
<br>	int i=0,j;
<br>	j = ++i+i++/i+i--;
<br>	printf(“%d”,j);
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;4</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;5</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;garbage</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;3</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14369 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q55. void main( )
<br>{
<br>	int red=0,pink;
<br>	pink =~red;
<br>	printf(“%d”,pink);
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;-32768</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;-1</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;1111</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;compilation error</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14370 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q56. void main( )
<br>{
<br>	int K=-7;
<br>	printf(“%d”,0&lt; K);
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;0</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;1</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;compilation error</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;-7</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14371 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q57. void main()
<br>{
<br>	char *pointer;
<br>	pointer = “Great”  “Life”;
<br>	printf(“%s”,pointer);
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Great</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Great  Life</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;GreatLife</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;compilation error</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14378 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q58. To reduce complexity of data type declaration we can use</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;union</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;enum</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;typedef</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;struct</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14381 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q59. Let`s say that you insert a new node between two existing nodes in a singly linked list. Which link pointers do you think require a new value?
<br>i.	The one after the new node
<br>ii.	The one belonging to a new node.
<br>iii.	The one before the new node and the one after the new node.
<br>iv.	The one before the new node.
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;i, ii and iv</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;ii and iv</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;i, ii and iii</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;i and iii</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14428 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q60. void print(int *a, int *b, int *c, int *d, int *e,)
<br>{
<br>	printf(“%d%d%d%d%d”,*a, *b, *c, *d, *e);
<br>}
<br>void main()
<br>{
<br>	static int arr[] = {90,91,92,93,94,95,96,97};
<br>	int *ptr = arr+1;
<br>	print(++ptr, ptr--, ptr, ptr++, ++ptr);
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;97  96  95 94  93</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;93  93  93  93  92</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;90  91  92  93  94</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;93  93  93  92  92</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14430 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q61. Which of the following statement provides exit-controlled looping?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;while statement</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;do-while statement</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;for statement</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;goto statement</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14433 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q62. void **p will be incremented by how many bytes?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;1</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;2</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;0</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;4</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14434 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q63. The degree of a leaf node in a general tree is </font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;0</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;-1</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;1</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;can not say</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14436 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q64. void main( )
<br>{ 
<br>	int x,y=2,z,a;
<br>x = (y*=2)+(z=a=y);
<br>printf(“%d”,x);
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;compilation error</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;4</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;8</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;6</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14440 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q65. Which can be used as an external sorting method.</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Bubble sort </td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Insertion sort  </td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Merge sort</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Selection sort</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14441 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q66. ---sorting method is least efficient.</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;quick sort</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;merge sort</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;radix sort</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;bubble sort</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14446 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q67. In a singly linked list, if a new node is to be inserted between two consecutive nodes how many links have to be modified?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;1</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;2</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;3</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;4</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14529 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q68. On error fclose( ) function returns</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;0</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;EOF</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;-1</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14530 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q69. int show(int v)
<br>{
<br>	if(v= =1||v= =0)
<br>	return 1;
<br>	if(v % 2==0)
<br>	return show(v/2) +2;
<br>	else
<br>	return show(v-2) +3;
<br>}
<br>void main( )
<br>{
<br>	int z;
<br>	z = show(7);
<br>	printf(“%d”,z);
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;11</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;5</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;10</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;infinite loop</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14538 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q70. int mix(int m)
<br>{
<br>	m++;
<br>	return (m);
<br>}
<br>void main( )
<br>{
<br>	int k=5,z;
<br>	z=mix(k=mix(k=mix(k)));
<br>	printf(“%d”,k); 
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;5</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;8</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;9</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;7</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14540 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q71. By using which of the following data structure we can convert a infix arithmetic expression into a postfix.</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Doubly linked list</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Queue</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Stack</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Graph</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14541 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q72. In case of a linked list </font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;arrays are used to hold the list</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;every link node has a link to the next node</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;links have array of pointer to next link</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;all of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14542 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q73. void main( )
<br>{
<br>	int i=0;
<br>	for(i=1;;i++)
<br>	if(i= =5)
<br>	{
<br>		printf(“%d ”,i)	;
<br>		break;
<br>	}
<br>	else
<br>	{
<br>		printf(“%d ”,i++);
<br>		continue;
<br>	}
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;1  2  3  4  5</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;2  4  6</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;1  3  5</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;compilation error: condition missing in the for loop</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14546 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q74. Which of the following statements are correct</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;enum variables can be assigned new values.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;enum variables can be compared.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;enumeration features does not increase the power of C.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;All of the above.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14547 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q75. Which of the following statements is false?
<br>i.  Structure is a collection of elements of different data types.
<br>ii. We cannot initialize Union.
<br>iii. We can initialize static or global structure.
<br>iv. We can use typedef with structure.
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;iii only </td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;ii and iii</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;ii only</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;All are true</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14548 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q76. void main( )
<br>{
<br>	float ch=2.5;
<br>	switch(ch)
<br>	{
<br>		case 2.5: printf(“%f”,ch);
<br>		case 2.0: printf(“%f”,ch); break;
<br>		default: printf(“%f”,ch); break;
<br>	}
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;2.5  2.5</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;2.5</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;2.0  2.5</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;compilation error</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14551 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q77. On error ftell( ) returns </font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;0</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;-1</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;-1L</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;0L</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14554 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q78. The maximum combined length of the command line arguments including the spaces between adjacent argument is</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;128 characters</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;256 characters</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;67 characters</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;it may vary from one operating system to another</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14558 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q79. Which of the following is the feature of stack</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;All operations are at one end</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;It can not reuse its memory</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;All elements are of different data types</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Any element can be accessed from it directly</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14606 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q80. void main( )
<br>	{
<br>		printf(“Hello”);
<br>		char far *p = 0x417;
<br>		*p = 64;
<br>		printf(“%d”,p);
<br>	}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Hello 0</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;0 Hello</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;HELLO</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;compilation error</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14608 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q81. void main( )
<br>{
<br>	struct num1
<br>	{
<br>		char ch[7];
<br>		char *s;
<br>	};
<br>	struct num2
<br>	{
<br>		char *c;
<br>		struct num1 s1;
<br>	};
<br>	static struct num2 s2 = {“apple”,”orange”,”lemon”};
<br>	printf(“%s  %s”,s2.c,s2.s1.s);
<br>	printf(“%s  %s”,s2.c++,++s2.s1.s);
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;apple  lemon  orange</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;apple  lemon  apple  orange</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;apple  lemon  pple  emon</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;apple  lemon  apple  emon</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14611 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q82. void main( )
<br>{
<br>	int show( );
<br>	int (*fun)( );
<br>	fun = show;
<br>	display(fun);
<br>}
<br>show( )
<br>{
<br>	printf(“Sunbeam…”);
<br>}
<br>display(f1)
<br>int (*f1)( );
<br>{
<br>	(*f1)( );
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Sunbeam…is printed twice</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Sunbeam…is printed once</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Expression syntax in display( )</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Compilation error</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14613 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q83. What is the correct sytanx for allocating memory for a 2-D pointer?
<br>	int **p,*q,r=100;</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;P = (int*)malloc(sizeof(int*));</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;P = (int*)malloc(sizeof(int**));</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;P = (int**)malloc(sizeof(int*));</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;None of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14629 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q84.         void main()
<br>	{
<br>	         FILE *f1,*f2;
<br>	         int troll,x;
<br>                 char tname[20];
<br>                 clrscr();
<br>                 f1 = fopen("data.txt","w");
<br>                 f2 = fopen("data.txt","r");
<br>                 if (f2==0) {
<br>	                       printf("Error While Opening The File DATA.DAT");
<br>            	               exit(0);
<br>        		    }
<br>                 while(1) {
<br>	                     printf("Enter Roll and Name : ");
<br>            	             scanf("%d %s",&amp;troll,tname);
<br>	                     if(troll&lt;=0)            	            break;
<br>              	                fprintf(f1,"%d %s ",troll,tname);
<br>        	           }
<br>	          clrscr();
<br>                  while( fscanf(f2,"%d %s",&amp;troll,tname)&gt;0 )
<br>                          printf("\n%5d%20s",troll,tname);
<br>                  getch();
<br>	   }
<br>
<br>If input provided is as follows:
<br>1	A
<br>2	B
<br>3	C
<br>4	D
<br>5	E
<br>0       XX
<br>,then what will be the output?
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;1	A
<br>2	B
<br>3	C
<br>4	D
<br>5	E
<br></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Compile time error</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Run time error.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;No Output i.e. blank screen</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14632 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q85. What will be the output?
<br>	void main()
<br>	{
<br>	 	int p=10,q=20;
<br>                clrscr();
<br>                printf("%5d%5d",p&amp;q,p&amp;&amp;q);
<br>                getch();
<br>        }
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;0	0</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;0	1</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;1	0</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;1	1</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14635 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q86.         void main()
<br>	{
<br>	         FILE *f1,*f2;
<br>	         int troll,x;
<br>                 char tname[20];
<br>                 clrscr();
<br>                 f1 = fopen("data.txt","w");
<br>                 f2 = fopen("data.txt","r");
<br>                 if (f2==0) {
<br>	                       printf("Error While Opening The File DATA.DAT");
<br>            	               exit(0);
<br>        		    }
<br>                  while(1) {
<br>	                     printf("Enter Roll and Name : ");
<br>            	             scanf("%d %s",&amp;troll,tname);
<br>	                     if(troll&lt;=0)            	            break;
<br>	                          fprintf(f1,"%d",troll);
<br>        		  }
<br>	           clrscr();
<br>                   while( fscanf(f2,"%d %s",&amp;troll,tname)&gt;0 )
<br>                        printf("\n%5d%20s",troll,tname);
<br>                   getch();
<br>	}
<br>If input provided is as follows:
<br>1	A
<br>2	B
<br>3	C
<br>4	D
<br>5	E
<br>0	   XX	
<br>,then what will be the output?
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Same as that of input.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;1  A</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;12345	XX</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Blank Screen. i.e. No Output.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14649 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q87. void main()
<br>{
<br>	enum code
<br>	{
<br>		add;
<br>		delete;
<br>		modify;
<br>		unchanged;
<br>	};
<br>	typedef enum code CODE;
<br>	CODE c,d;
<br>	c = add;
<br>	d = modify;
<br>	printf(“c = %d  d = %d”,c,d);
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;c = 0  d = 0  </td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;c = 1  d = 3</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;c = 0  d = 2</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;c = garbage value d = garbage value</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14651 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q88. void main( )
<br>{	
<br>        int a=12,i=0;
<br>	while(a&gt;&gt;=i)
<br>	{	
<br>                printf(“ a=%d  i=%d ”,a,i);
<br>		i++;
<br>	}
<br>}	
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;a=12  i=0  a=6  i= 1  a=3  i=2  a=1  i=3  </td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;a=12  i=0  a=6  i= 1  a=3  i=2</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;a=12  i=0  a=6  i= 1  a=1  i=2</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;a=12  i=0  a=6  i= 1  a=1  i=2  ……………infinite loop</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14655 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q89. 1.	What will be the output of the following code
<br>main()
<br>{
<br> char str1[]="Banglore-440010";
<br> char str2[15];
<br> strcpy(str2,"Pune ");
<br> strncat(str2,str1,8);
<br> printf("%s",str2);
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Pune Banglore-440010</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Pune Banglore</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Banglore</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Pune Ban</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14656 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q90. What is true about strtok( ) function </font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;returns a pointer to the first character of the first token in source</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;writes a null character into source immediately following the returned token.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Subsequent calls with null for the first argument will work through the</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;all of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14658 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q91. void main( )
<br>{
<br>	int a = 0xff;
<br>	if(a&lt;&lt;4&gt;&gt;12)
<br>		printf(“Leftlist”);
<br>	else
<br>		printf(“Rightlist”);
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Leftlist</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Rightlist</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;compilation error</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;runtime error</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14660 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q92. Which of the following functions are ideally suited for reading the contents of a file record by record?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;getc( )</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;gets( )</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;fread( )</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;fgets( )</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15343 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q93. 8.	point out the error from following code
<br>main()
<br>{
<br>	fun(1,4,7,11,0)
<br>           }
<br>
<br>Fun(…)
<br>{
<br>Va_list ptr;
<br>int num;
<br>
<br>Va_start(ptr,int);
<br>Num=va_arg(ptr,int);
<br>Printf(“%d”,num);
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Compilation error</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;b.	There is no fixed argument in the definition of fun.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;c.	Too few parameter in call of function fun</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;It will output 1 on screen.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15346 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q94. If we use following printf(“%d”,num);  to print a long int we will get warning message.</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : F</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15347 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q95. How would you dynamically allocate a 2-D arrays of 3 rows and 4 columns such that we are able to access any element using 2 subscripts, as in arr[i][j]? Also the rows of the array should be stored in adjacent  memory locations.</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;int **p, i ,j;
<br>p=(int **) malloc(3 *sizeof(int *));
<br>for(i=0; i&lt;3; i++)
<br>    p[i]=p[0] + i * 4
<br></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;int **p, i ,j;
<br>p=(int **) malloc(3 * 4 * sizeof(int *));</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;int  *p= (int **) malloc(3 * 4 * sizeof(int *));</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;int  *p= (int *) malloc(3 * 4 * sizeof(int *));</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15348 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q96. What is true calloc() about function?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;calloc() will set each element with a value 0.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;calloc() needs two arguments number of elements and size of each element.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Option a &amp; b is true.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;None of the above.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15436 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q97. What is wrong with this?
<br>main(){
<br>int *ptr;
<br>*ptr=10;
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Incorrect  assignment</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;incorrect and will not compile</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;10</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;This program compiles fine. But, has unpredictable behaviour at run time</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15520 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q98. For the following prototype
<br>float funct(float *var);
<br>Then within funct() to refer var value being passed using</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;*var</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;var</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;float var</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;float *var</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15529 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q99. Overflow refers to</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;a queue growing larger than array size.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;front of queue is equal to back.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;both option 1 and option 2 above.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none of the above.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15547 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;C_CET</td>
	</tr><tr>
		<td><font color="Blue">Q100. What do the function itoa ( ) do?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Converts a string to an integer.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Converts an integer to a string</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Converts a floating-point number to a string.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Converts a string to a floating-point number.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr>
</tbody></table><input id="btnClose" style="FONT-WEIGHT: bold; Z-INDEX: 103; LEFT: 2px; WIDTH: 130px; POSITION: absolute; TOP: 77px; HEIGHT: 33px" onclick="window.close()" type="button" value="Close this Window" name="btnClose">
			<span id="lblResult" style="Z-INDEX: 102; LEFT: 157px; POSITION: absolute; TOP: 80px"><b><font size="5">Hi dac46, You have scored : 0</font></b></span>
<div style="LEFT: 1px; WIDTH: 780px; POSITION: absolute; TOP: 0px; HEIGHT: 80px" ms_positioning="GridLayout">
	<img id="Header11_Image1" src="./5_files/Main.jpg" align="Middle" border="0" height="64" width="718" style="Z-INDEX: 101; LEFT: 15px; POSITION: absolute; TOP: 3px"></div>

</form>
	

</body></html>