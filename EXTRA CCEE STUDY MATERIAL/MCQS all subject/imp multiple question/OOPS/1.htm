<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0028)http://m108/exam/result.aspx -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<title>Result:- SunBeam Infotech Pvt LTD, Pune</title>
		<meta content="Microsoft Visual Studio .NET 7.1" name="GENERATOR">
		<meta content="C#" name="CODE_LANGUAGE">
		<meta content="JavaScript" name="vs_defaultClientScript">
		<meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
		<script language="JavaScript"> 
			var popup="Copyright 2005, SunBeam Infotech PVT. LTD.";
			function noway(go) 
			{
				if(document.all) 
				{
					if (event.button == 2) 
					{			
						alert(popup);
						return false;
					}
				}
				if (document.layers)
				{
					if (go.which == 3)
					{	
						alert(popup);
						return false;
					}
				} 
			}
			if(document.layers) 
			{ 
				document.captureEvents(Event.MOUSEDOWN);
			}
			document.onmousedown=noway;
			
			var debug = true;
			function right(e)
			{
				if (navigator.appName == 'Netscape' && (e.which == 3 || e.which== 2)) return false;
				else if (navigator.appName == 'Microsoft Internet Explorer' && (event.button == 2 || event.button == 3))
				{
					alert('Copyright 2005, SunBeam Infotech PVT. LTD.');
					return false;
				} 
				return true;
			} 
			document.onmousedown=right; 
			if (document.layers)
			window.captureEvents(Event.MOUSEDOWN);
			window.onmousedown=right;
			
			document.onkeydown = function ()
			{
				alert(popup);
				return false;
			}
			
			function blockMenu()
			{
				return false;
			}
			
		/*onselectstart="return false" onkeypress="return false" onkeydown="return false"
		ondragstart="return false" bottomMargin="0" leftMargin="0" topMargin="0" onload='setInterval("window.clipboardData.clearData()",20);document.attachEvent("oncontextmenu",blockMenu)'
		*/
		/*onselectstart="return false" onkeypress="return false"
		onkeydown="return false" ondragstart="return false" bottomMargin="0" leftMargin="0"
		topMargin="0" onload='setInterval("window.clipboardData.clearData()",20);document.attachEvent("oncontextmenu",blockMenu)'
		*/
		</script>
</head>
	<body rightmargin="0" ms_positioning="GridLayout" onselectstart="return false" onkeypress="return false" onkeydown="return false" ondragstart="return false" bottommargin="0" leftmargin="0" topmargin="0" onload="setInterval(&quot;window.clipboardData.clearData()&quot;,20);document.attachEvent(&quot;oncontextmenu&quot;,blockMenu)">
		<form name="Form1" method="post" action="./1_files/1.htm" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwtMjIwNjg5MjEzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47PjtsPHQ8cDxwPGw8V2lkdGg7XyFTQjs+O2w8MTw1MDBweD47aTwyNTY+Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDxIaSBkYWMxMCwgWW91IGhhdmUgc2NvcmVkIDogMDs+Pjs+Ozs+Oz4+Oz4+Oz7MM23fmjWcKDOtvp7fpsGKFMrz5A==">

			<table id="tblResult" cellspacing="0" cellpadding="0" border="0" height="26" width="500" style="Z-INDEX: 100; LEFT: 138px; POSITION: absolute; TOP: 128px">
	<tbody><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13918 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q1. In OOP languages, all of the processing and functionality has been moved to</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;the objects</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;the classes</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;class members</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;all of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13936 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q2. What term in procedural languages corresponds closely with classes in OOPs?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;variable</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;function</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;system defined data type</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;user defined data type</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13940 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q3. What is the main purpose of creating an abstract base class ?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;creating the dynamic object</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;dynamic binding</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;deriving classes</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none of these</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13943 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q4. Object is</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;collection of classes</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;collection of members</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;instance of class</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;similar to classes</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13944 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q5. Inheritance is useful for producing a software, which is</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;instantaneous</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;unpredictable</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;reusable</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none of these</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13983 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q6. A metaclass is a class</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;whose instances themselves are classes.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;in which instance created will itself be a class.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;A and B</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;None of the above.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13986 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q7. The size of the object of the class is</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Sum of sizes of its data and function members</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;size of its largest data member</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;size of its largest function member</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;sum of sizes of its data members.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14027 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q8. Is implementation of virtual function is efficient to achieve a goal as compared with implementation of non-virtual function?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Depends upon implementation.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;It is efficient.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Depends upon stack availability.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;It is not efficient.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14093 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q9. Which of the following is the class member access operator?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;*this</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;( )</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;*-&gt;</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;-&gt;</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14155 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q10. Default arguments can be used to _________</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;pass parameters to another function</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;increase execution speed</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Reduce memory requirement</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;None of these</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14204 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q11. Copy constructor and assignment operator does the same job.</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : F</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14219 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q12. A dangling pointer is one</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;which arises when you use the address of an object after its lifetime is over</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;which may occur in situations like returning addresses of the automatic variables from a function or using the address of the memory block after it is freed</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Option 1 and Option 2</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;None of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14231 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q13. If a class is having two or more members of types of another classes, the relationship is called as _____________</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;has – a relationship</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;is – a relationship</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;kind of relationship</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;part-of relationship</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14298 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q14. What is the meaning of the statement.....
<br> const Hello *p;</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;p is a pointer to an object of class Hello that can modify the contents of object</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;p is a pointer to an object of class Hello that can access const member functions of object</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;p is a pointer to an object of class Hello that can access static member functions of object</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;p is a pointer to an object of class Hello that can access any member of object</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14323 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q15. Inheritance in OOPs represents _________</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;a view from big to small</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;a view from generic to specific</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;A and B</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14329 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q16. After successful memory allocation, new returns __________</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;NULL</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Zero</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;void</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;None of these</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14339 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q17. It is preferable to call a constructor of a class from another constructor of the same class. State True or False.</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : F</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14344 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q18. When a derived class fails to override a virtual function, then</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;The first redefinition found in reverse order of derivation is used.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;If the object of the derived class accesses that function, the function defined by the base class is used.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Both, 1 and 2 are true.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Both, 1 and 2 are false.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14346 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q19. Virtual functions ____</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Must be friend of the base class.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Must be static member of the base class which must be defined.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Must be non-static member of the base class which must be defined.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Must be static member of the base class which need not be defined.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14347 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q20. What is true about virtual functions?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Can be called from constructors but not from destructors.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Can be called from destructors but not from constructors.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Cannot be called from either constructors or from destructors.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Can be called from both constructors and destructors.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14349 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q21. What is true in case of virtual function?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;A virtual function in base class must be defined, even though it may not be used.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Static member functions can be made virtual.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;We cannot have virtual destructors.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;A virtual function cannot be a friend of another class.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14383 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q22. What will be the output if the input provided is 5?
<br>	#include &lt; iostream.h &gt;
<br>	#include &lt; conio.h &gt;
<br>	int a = 1000;
<br>	class Test
<br>	{
<br>		int a;
<br>		public:
<br>			Test()
<br>			{
<br>				a = 0;
<br>			}
<br>			void get_a()
<br>			{
<br>				int a;
<br>				cout &lt;&lt; “Enter Value of A :”;
<br>                                cin &gt;&gt; a;
<br>			}
<br>			void put_a()
<br>			{
<br>				cout &lt;&lt; endl &lt;&lt; a &lt;&lt; “\t” &lt;&lt; ::a;
<br>			}
<br>	};
<br>        void main()
<br>        {
<br>              Test t1;
<br>              t1.get_a();
<br>              t1.put_a();
<br>        }
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;0 0</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;0 1000</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;5 1000</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Compile time error</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14391 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q23. A derived class inherits every member of a base class except :</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;its constructors and destructors</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;its operator = () members.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;its friends.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;all of the above.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14394 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q24. Static members of a class</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;means class variable.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;have the same properties as that of global variables but having class scope.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;A and B</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;A or B</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14415 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q25. Which statement is true in case of a destructor?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;A destructor can be overloaded.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;A destructor has to be called explicitly.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;A destructor does not return any value.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;A destructor can have parameters.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14418 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q26. Overloading of which operator will be similar to invoking a copy constructor?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;+</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;. (dot)</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;=</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;~ (tilde)</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14419 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q27. In which of the following cases is a copy constructor invoked?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;When a new object of a class is initialized with the existing object of that class.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;When a copy of an object is passed by value as an argument to a function.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;When you return an object of the class by value.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;All of the above.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14454 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q28. What will be the output?
<br>	class d
<br>	{
<br>		int day, mon;
<br>		public:
<br>			d() { cout &lt;&lt; “\nconst”; }
<br>			~d() { cout &lt;&lt; “\ndest”; }
<br>	};
<br>	void main()
<br>	{
<br>		d *d1 = new d;
<br>		cout &lt;&lt; “Process”;
<br>        }
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;const process dest</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;process const dest</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;const process</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Compilation error.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14467 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q29. When does dynamic binding occur?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;During construction.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;During compilation.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;During linking.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;During execution.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14469 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q30. Overriding causes _________</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;base class function to be called.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;derived class function to be called.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;a virtual function to be called.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;first base class then derived class function to be called.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14489 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q31. With which of the following streams is the keyboard device associated by default?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;cerr</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;clog</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;cin</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;cout</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14563 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q32.         class computer
<br>	{
<br>		public: computer() { }
<br>			virtual ~computer() { }
<br>	};
<br>	class memory: public computer
<br>	{
<br>		public:
<br>			memory() { }
<br>			~memory() { }
<br>	};
<br>
<br>	void main()
<br>	{
<br>	}
<br>
<br>	Referring to the above code, why is the keyword virtual added before the destructor ‘computer’?
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;To make it an abstract class.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;To make inheritance possible. ( at least one function in the base class must be virtual).</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;To indicate that this destructor cannot be overloaded.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;To ensure that the proper destructor is invoked if any other class is derived from the base class ‘computer’.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14574 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q33. What is true about a virtual base class?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Constructors for virtual base classes are invoked before any non-virtual base classes.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;A class whose constructors have parameters can be a virtual base class.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Only one copy of the class is inherited by the next generation class.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;All of the above are true.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14581 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q34. Static member functions _________</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;can be used without an instantiation of an object.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Can only access static data.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;A and B.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Neither A nor B.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14586 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q35. Which of the following statements have errors?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;cout.width(10).precision(3);</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;cout &lt;&lt; resetiosflags(ios::left,ios::showpoint);</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;cout &lt;&lt; put(“siit”);</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;All of the above statements have errors.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14589 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q36. this pointer ________________</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;addresses the class object for which the member function is called.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;points to addresses of member function.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;pointes to class object.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none of the above.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14590 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q37.           class test
<br>	  {
<br>		int a; static int cnt;
<br>		public:
<br>			test() { a=0; cout &lt;&lt; ++cnt; }
<br>			test( int p) { a=p; cout &lt;&lt; ++cnt; }
<br>			~test() { cout &lt;&lt; cnt--; }
<br>	    };
<br>	    int test::cnt;
<br>            void main()
<br>	    {
<br>		test ob,ob1(10);
<br>		ob = test();
<br>		test();
<br>            }
<br>
<br>            What will happen after compilation?
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Error at statement ob=test();</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Error at statement test ob,ob1(10);</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Error at statements ob=test(); and test ob,ob1(10);</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;No error.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14594 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q38.           class test
<br>	  {
<br>		int a; static int cnt;
<br>		public:
<br>			test() { a=0; cout &lt;&lt; ++cnt; }
<br>			test( int p) { a=p; cout &lt;&lt; ++cnt; }
<br>			~test() { cout &lt;&lt; cnt--; }
<br>	  };
<br>	 int test::cnt;
<br>	 void main()
<br>	 {
<br>		test ob,ob1(10);
<br>		ob = test();
<br>		test();
<br>         }
<br>
<br>What is correct? ( assuming there is no error. )
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;2 constructors and 2 destructors will be called.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;3 constructors and 2 destructors will be called.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;3 constructors and 3 destructors will be called.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;4 constructors and 4 destructors will be called.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14595 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q39.           class test
<br>	  {
<br>		int a; static int cnt;
<br>		public:
<br>			test() { a=0; cout &lt;&lt; ++cnt; }
<br>			test( int p) { a=p; cout &lt;&lt; ++cnt; }
<br>			~test() { cout &lt;&lt; cnt--; }
<br>	  };
<br>	 int test::cnt;
<br>	 void main()
<br>	 {
<br>		test ob,ob1(10);
<br>		ob = test();
<br>		test();
<br>         }
<br>
<br>What is correct? ( assuming there is no error. )
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;2 constructors and 2 destructors will be called.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;3 constructors and 2 destructors will be called.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;3 constructors and 3 destructors will be called.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;4 constructors and 4 destructors will be called.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14627 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q40. The inline specifier ________</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Does not change the behavior of a function.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Tells the compiler to make a use of a stack for calling a function.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;1 and 2</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;None of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15437 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q41. A class is logical abstraction while an object is real. </font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15503 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q42. C++ is developed by </font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Dennis Ritchie</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Bjarne Stroustrup</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Herbert Schitz</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Bjarne Borg</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15515 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q43. The pointer that points to current object is ‘this’</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15516 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q44. The :: is called</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;double dot</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;four sqr</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;delimiter</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;scope resolution operator</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15524 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q45. Iterators are</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;pointer like entities used to access elements in a container.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;linked list structures.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;stacked pointers in vector map.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;None of the above.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15531 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q46. volatile qualifier indicates that memory location</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;can be altered.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;cannot be altered.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;will not be allocated.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;will disappear.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15927 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q47. Data member of a class can be qualified as static.</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;True</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;False</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Only static friends</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Only void static</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15929 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q48. The private data of a class accessed by a friend function </font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;is in the object that invoked the friend</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;is in the object created by the friend function</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;is in the object of different class</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;is in the object sent to the friend function as argument</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15936 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q49. The use of delete is to</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Only deallocate the memory allocated by new</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Deallocate the memory allocated by new and call the class destructor</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Call the destructor of that class whose object is to be destroyed.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;None of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15937 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q50. Character constants and string constants are same representation</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Characters can have numbers but string constants do not.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Strings are nothing but character array</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;False</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;True</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr>
</tbody></table><input id="btnClose" style="FONT-WEIGHT: bold; Z-INDEX: 103; LEFT: 2px; WIDTH: 130px; POSITION: absolute; TOP: 77px; HEIGHT: 33px" onclick="window.close()" type="button" value="Close this Window" name="btnClose">
			<span id="lblResult" style="Z-INDEX: 102; LEFT: 157px; POSITION: absolute; TOP: 80px"><b><font size="5">Hi dac10, You have scored : 0</font></b></span>
<div style="LEFT: 1px; WIDTH: 780px; POSITION: absolute; TOP: 0px; HEIGHT: 80px" ms_positioning="GridLayout">
	<img id="Header11_Image1" src="./1_files/Main.jpg" align="Middle" border="0" height="64" width="718" style="Z-INDEX: 101; LEFT: 15px; POSITION: absolute; TOP: 3px"></div>

</form>
	

</body></html>