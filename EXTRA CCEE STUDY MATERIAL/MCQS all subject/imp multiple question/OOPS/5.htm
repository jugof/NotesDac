<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0028)http://m108/exam/result.aspx -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<title>Result:- SunBeam Infotech Pvt LTD, Pune</title>
		<meta content="Microsoft Visual Studio .NET 7.1" name="GENERATOR">
		<meta content="C#" name="CODE_LANGUAGE">
		<meta content="JavaScript" name="vs_defaultClientScript">
		<meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema">
		<script language="JavaScript"> 
			var popup="Copyright 2005, SunBeam Infotech PVT. LTD.";
			function noway(go) 
			{
				if(document.all) 
				{
					if (event.button == 2) 
					{			
						alert(popup);
						return false;
					}
				}
				if (document.layers)
				{
					if (go.which == 3)
					{	
						alert(popup);
						return false;
					}
				} 
			}
			if(document.layers) 
			{ 
				document.captureEvents(Event.MOUSEDOWN);
			}
			document.onmousedown=noway;
			
			var debug = true;
			function right(e)
			{
				if (navigator.appName == 'Netscape' && (e.which == 3 || e.which== 2)) return false;
				else if (navigator.appName == 'Microsoft Internet Explorer' && (event.button == 2 || event.button == 3))
				{
					alert('Copyright 2005, SunBeam Infotech PVT. LTD.');
					return false;
				} 
				return true;
			} 
			document.onmousedown=right; 
			if (document.layers)
			window.captureEvents(Event.MOUSEDOWN);
			window.onmousedown=right;
			
			document.onkeydown = function ()
			{
				alert(popup);
				return false;
			}
			
			function blockMenu()
			{
				return false;
			}
			
		/*onselectstart="return false" onkeypress="return false" onkeydown="return false"
		ondragstart="return false" bottomMargin="0" leftMargin="0" topMargin="0" onload='setInterval("window.clipboardData.clearData()",20);document.attachEvent("oncontextmenu",blockMenu)'
		*/
		/*onselectstart="return false" onkeypress="return false"
		onkeydown="return false" ondragstart="return false" bottomMargin="0" leftMargin="0"
		topMargin="0" onload='setInterval("window.clipboardData.clearData()",20);document.attachEvent("oncontextmenu",blockMenu)'
		*/
		</script>
</head>
	<body rightmargin="0" ms_positioning="GridLayout" onselectstart="return false" onkeypress="return false" onkeydown="return false" ondragstart="return false" bottommargin="0" leftmargin="0" topmargin="0" onload="setInterval(&quot;window.clipboardData.clearData()&quot;,20);document.attachEvent(&quot;oncontextmenu&quot;,blockMenu)">
		<form name="Form1" method="post" action="./5_files/5.htm" id="Form1">
<input type="hidden" name="__VIEWSTATE" value="dDwtMjIwNjg5MjEzO3Q8O2w8aTwxPjs+O2w8dDw7bDxpPDE+O2k8Mz47PjtsPHQ8cDxwPGw8V2lkdGg7XyFTQjs+O2w8MTw1MDBweD47aTwyNTY+Oz4+Oz47Oz47dDxwPHA8bDxUZXh0Oz47bDxIaSBkYWMxMCwgWW91IGhhdmUgc2NvcmVkIDogMDs+Pjs+Ozs+Oz4+Oz4+Oz7MM23fmjWcKDOtvp7fpsGKFMrz5A==">

			<table id="tblResult" cellspacing="0" cellpadding="0" border="0" height="26" width="500" style="Z-INDEX: 100; LEFT: 138px; POSITION: absolute; TOP: 128px">
	<tbody><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13908 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q1. The difference between the constructors and destructors are ________</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;constructors can take the arguments but destructor can’t</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;constructors can be overloaded but destructor can’t be</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;A and B</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;None of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13933 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q2. A friend function has access to</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;all public, private and protected members of a class for which it is declared as a friend</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;only private and protected members of a class for which it is declared as a friend</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;only public members of a class for which it is declared as a friend</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;only protected members of a class for which it is declared as a friend</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13941 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q3. A class hierarchy is</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;collection of classes</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;a description of classes related by inheritance</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;a collection of derived classes</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none of these</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13982 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q4. What is true regarding new and delete operators?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;When new and  delete operators are overloaded on the objects, the constructors and destructors respectively are automatically called.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;friend functions can’t overload new and delete operators.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;new and delete operators use stack for dynamic memory allocation and deallocation.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;All of the above.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13987 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q5. Default arguments can be used to</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;pass parameters to another function.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;increase execution speed</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;reduce memory requirement</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;13988 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q6. One cannot directly use the instance creation mechanism of a parameterized class</font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14020 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q7. What will happen if we attempt to delete a pointer twice?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Nothing.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;The object being pointed by the pointer will be get deleted twice.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Compile time error.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;The possibility of corruption of the heap.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14024 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q8. The keyword virtual tells the compiler that ___________</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;it should perform early binding.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;the function invoked in response to each call is known at compile time.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;it should not perform early binding.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;none of the above.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14046 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q9. What is the precedence of operator functions?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;In forward direction as per their implementation</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Same as per intrinsic operations (addition, subtraction, multiplication etc.)</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;In reverse direction as per their implementation</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Unpredictable</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14082 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q10. Which of the following statements about ‘this’ is false?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;It is a keyword.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;It is a pointer to a caller object.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;It is created when a member function is called.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;It is a pointer class.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14084 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q11. What is the output of the following?
<br>void main()
<br>{
<br>	void *gptr;
<br>        int *iptr;
<br>        gptr = iptr;
<br>        delete gptr;
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;compile time error</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;runtime error</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Programme will execute successfully</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Unpredictable execution</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14087 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q12.         class F
<br>	{
<br>		public:
<br>			void f(int x);
<br>			void g(int x);
<br>			void h(int x);
<br>	};
<br>
<br>Which of the statements will declare an array of pointers to non-static member functions of F?
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;typedef void ( F::*p )(int);	p ptr[3];</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;typedef (F::void(*p))(int);	p ptr[3];</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;typedef (void *(F::p))(int);	p ptr[3];</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;typedef void(F::p)(int);	*p ptr[3];</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14090 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q13. What is true regarding free store?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;It is used for static memory allocation.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;new allocates memory from the free store.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;It is also called as the stack.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;All of the above are true.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14158 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q14. A non-member function can invoke an overloaded binary operator by passing 
<br>_______ arguments.
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;four</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;only one</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;two</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;three</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14330 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q15. If new fails to allocate memory, then _____________ exception is generated.</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;ios::bad</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;error::new</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;bad_alloc</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;None of the above.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14332 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q16. class extra
<br>	{
<br>		int a,b;
<br>		public:
<br>			extra(int x,int y)
<br>			{
<br>				a = x;
<br>				b = y;
<br>			}
<br>			extra operator += (int n);
<br>			void display()
<br>			{
<br>				cout &lt;&lt; endl &lt;&lt; a &lt;&lt; “ “ &lt;&lt; b;
<br>			}
<br>	};
<br>	extra extra::operator += (int n)
<br>	{
<br>		a = a + n;
<br>		b = b + n;
<br>		return *this;
<br>	}
<br>	void main()
<br>	{
<br>		extra e1(3,5);
<br>	e1 += 20;
<br>	e1.display();
<br>	}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;3 5</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;23 25</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;20 20</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;+= operator cannot be overloaded.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14343 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q17. What will be the output?
<br>        class Test
<br>	{
<br>		int a;
<br>		public:
<br>			T fun1(int x)
<br>			{
<br>				T tmp;
<br>				tmp.a = 2 * x;
<br>				Return tmp;
<br>			}
<br>			void fun2()
<br>			{
<br>				cout &lt;&lt; endl &lt;&lt; this-&gt;a;
<br>			}
<br>	};
<br>	void main()
<br>	{
<br>		T t1;
<br>		t1.fun1(100).fun2();
<br>        }
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;100</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;200</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Compile time error</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Run time error</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14392 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q18. A class includes ____________</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;a default constructor.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;a copy constructor.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;a default definition for the assignment operator (=) with the class itself as a parameter.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;all of the above.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14395 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q19. State True or False.
<br>	Static member can be referred to as a member of any object of that class or even directly by the class name.
<br></font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14405 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q20. Which of the following is true in case of a constructors?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Object of a class with a constructor cannot be a member of a union.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;We can take address of a constructor.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Calling constructor within a constructor is allowed.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;‘this’ exists for a constructor.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14415 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q21. Which statement is true in case of a destructor?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;A destructor can be overloaded.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;A destructor has to be called explicitly.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;A destructor does not return any value.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;A destructor can have parameters.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14418 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q22. Overloading of which operator will be similar to invoking a copy constructor?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;+</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;. (dot)</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;=</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;~ (tilde)</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14421 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q23. In case of a copy constructor, which of the following is true?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Used to instantiate an object from another object.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;To copy one object to another existing object.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Can be a substitute for a “=” operator.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;All of the above.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14456 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q24. What will be the output?
<br>#include &lt; iostream.h &gt;
<br>#include &lt; conio.h &gt;
<br>class test
<br>{
<br>	int a;
<br>        public:
<br>	       test(){ a = 10; }
<br>               test(int p){ a = p; }
<br>               test(char x){   if ( x = = ‘i’ || x = = ‘I’ )
<br>                                        test(59);
<br>                               else
<br>                                	test();
<br>                           }
<br>               void display(){ 	cout &lt;&lt; endl &lt;&lt; a; }
<br>};
<br>void main()
<br>{
<br>clrscr();
<br>test t1,t2(100),t3(‘i’);
<br>t1.display();
<br>t2.display();
<br>t3.display();
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;10 100 59</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;10 100 10</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;10 100 garbage</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Compile time error.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14458 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q25. What will be the output of the following programme?
<br>#include &lt; iostream.h &gt;
<br>#include &lt; conio.h &gt;
<br>class test
<br>{
<br>	protected:
<br>                  int a;
<br>        public:
<br>	~test() { ; }
<br>	test(){	a = 10; }
<br>	test(int p){	a = p;    }
<br>	void display(){	cout &lt;&lt; endl &lt;&lt; a;}
<br>};
<br>class subtest:public test
<br>{
<br>	int b;
<br>	public:
<br>		subtest(){   b = 20;	}
<br>		subtest(int p,int q):test(p){	b = q;	}
<br>		void display(){	cout &lt;&lt; endl &lt;&lt; a &lt;&lt; “ ”  &lt;&lt; b;	}
<br>};
<br>
<br>void main()
<br>{
<br>	test *t;
<br>	t = new test(100);
<br>	t-&gt;display()’
<br>	t = new subtest(20,40);
<br>	t-&gt;display();
<br>	getch();
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;100 20 40</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;100 20</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;20 40</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Compile time error</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14460 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q26. What will be the output?
<br>#include &lt; iostream.h &gt;
<br>#include &lt; conio.h &gt;
<br>#include &lt; stdio.h &gt;
<br>
<br>class test
<br>{
<br>	protected:
<br>	int a;
<br>	public:
<br>		test()	{ a = 10; }
<br>		virtual void display()	{cout &lt;&lt; endl &lt;&lt; a;}
<br>};
<br>
<br>class subtest:private test
<br>{
<br>	int b;
<br>	public:
<br>		subtest() {	b = 20; 	}
<br>		void display() { cout &lt;&lt; endl &lt;&lt; a &lt;&lt; " " &lt;&lt; b;	}
<br>};
<br>
<br>
<br>void main()
<br>{
<br>	clrscr();
<br>	test *t;
<br>	t = new test;
<br>	t-&gt;display();
<br>	t = new subtest;
<br>	t-&gt;display();
<br>	getch();
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;10 10</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;20 20</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;10 20</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Compile time error</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14462 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q27. const function guarantees that it will not alter _________ of the object on which 
<br> it is invoked.
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;the method</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;the state</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;the behavior</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;all of the above.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14463 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q28. What will be the output?
<br>class data
<br>{
<br>	public:
<br>		int val;
<br>		data()
<br>		{
<br>			cout &lt;&lt; endl &lt;&lt; a;
<br>                        val = a;
<br>		}
<br>		~data ()
<br>		{
<br>			cout &lt;&lt; endl &lt;&lt; a;
<br>		}
<br>}ob1(1),ob2(2);
<br>void main()
<br>{
<br>	data ob3(3), ob4(4);
<br>}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;4 3 2 1 4 3 2 1</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;3 4 1 2 2 1 4 3</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;1 2 3 4 4 3 2 1</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;4 3 2 1 1 2 3 4</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14466 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q29. For performing late binding the compiler creates _________.</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;a late binding function</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;a v-table.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;an array of late functions.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;smart pointer.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14469 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q30. Overriding causes _________</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;base class function to be called.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;derived class function to be called.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;a virtual function to be called.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;first base class then derived class function to be called.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14486 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q31. Which of the following statements are true/valid regarding files and modes?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;ios::app allows to add data to the end of the file.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;ios::noreplace fails if the file doesn’t exist.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;ios::nocreate fails if file exists.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;All of the above are false.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14493 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q32. Which of the following is the most appropriate?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;inline functions and macros are same.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;The compiler inserts code at the inline function calls.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Compiler doesn’t check the arguments to inline functions.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Macros are more efficient over the inline functions.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14565 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q33. Which of the following functions are inherited by the ifstream class from the istream class?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;getline()</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;seekg()</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;tellg()</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;All of the above.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14578 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q34. Each file is associated with _______ pointers.
<br>1.	get
<br>2.	put
<br>3.	append
<br>4.	trunc
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;1 and 2</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Only 3</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;3 and 4</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;All of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14579 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q35. What will be the output of the following?
<br>        #include &lt; iostream.h &gt;
<br>        #include &lt; conio.h &gt;
<br>	#include &lt; iomanip.h &gt;
<br>
<br>	ostream &amp; CurrencyFormat(ostream&amp; currency)
<br>        {
<br>	        currency.width(10);
<br>        	currency.precision(2);
<br>        	currency.fill(‘*’);
<br>        	currency &lt;&lt; “Rs.”;
<br>        	return currency;
<br>        }
<br>	void main()
<br>	{
<br>		clrscr()
<br>		cout &lt;&lt; CurrencyFormat (100.3412);
<br>                getch();
<br>        }
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;*******Rs.100.34</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;*******100.34 Rs.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Rs. *******100.34</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Garbage.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14580 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q36.         What will be the output?
<br>	#include &lt; iostream.h &gt;
<br>	#include &lt; conio.h &gt;
<br>
<br>	void max(int x,int y)	{  cout &lt;&lt; endl &lt;&lt; “X=” &lt;&lt; x &lt;&lt; “ And Y=” &lt;&lt; y;       }
<br>	void max(long x,long y){ cout &lt;&lt; “X=” &lt;&lt; x &lt;&lt; “ And Y=” &lt;&lt; y;     }
<br>	void main()
<br>	{
<br>		void max(int,int);
<br>		void max(long,long);
<br>		clrscr();
<br>		max(100,200);
<br>		max(300L,400);
<br>		getch();
<br>	}
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;X = 100 Y= 200 X=300 Y=400</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Ambiguity error at statement max(100,200);</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Ambiguity error at statement max(300L,400);</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Both B and C</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14585 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q37. Which of the following is the syntax to close a file if we have 
<br>	File-stream-class stream-object;
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;stream-object.close;</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;stream-object.close();</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;stream-object.close(filename);</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;stream-object.close(“filename”);</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14587 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q38. Which of the following statements is true when a derivation inherits both a virtual and non-virtual instance of a base class?</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Each derived class object has a base object from the virtual instance and a base object from the non-virtual instance.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Each derived class object has base objects only from the virtual instance.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Each base class object has derived objects only from the virtual instance.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;Each derived class object has base objects only from the non-virtual instance.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14590 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q39.           class test
<br>	  {
<br>		int a; static int cnt;
<br>		public:
<br>			test() { a=0; cout &lt;&lt; ++cnt; }
<br>			test( int p) { a=p; cout &lt;&lt; ++cnt; }
<br>			~test() { cout &lt;&lt; cnt--; }
<br>	    };
<br>	    int test::cnt;
<br>            void main()
<br>	    {
<br>		test ob,ob1(10);
<br>		ob = test();
<br>		test();
<br>            }
<br>
<br>            What will happen after compilation?
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Error at statement ob=test();</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Error at statement test ob,ob1(10);</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Error at statements ob=test(); and test ob,ob1(10);</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;No error.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14592 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q40.           class test
<br>	  {
<br>		int a; static int cnt;
<br>		public:
<br>			test() { a=0; cout &lt;&lt; ++cnt; }
<br>			test( int p) { a=p; cout &lt;&lt; ++cnt; }
<br>			~test() { cout &lt;&lt; cnt--; }
<br>	     };
<br>	     int test::cnt;
<br>	     void main()
<br>	     {
<br>		test ob,ob1(10);
<br>		ob = test();
<br>		test();
<br>             }
<br>
<br>If this programme runs, how many times constructor will be invoked?
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;0, as programme will not run.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;2 times</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;3 times</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;4 times</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14596 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q41. To include setw in the programme we have to include _____ header file.</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;stdio.h</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;iomanip.h</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;iostream.h</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;math.h</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14597 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q42.         What will be the output of the following programme?
<br>	void main()
<br>	{
<br>		cout &lt;&lt; setfill(‘/’);
<br>		cout.width(5);
<br>		cout &lt;&lt; “abcd”;
<br>	        cout.width(5) &lt;&lt; 980;
<br>        }
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;/abcd  980</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;/abcd//980</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;/abcd</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;abcd/980//</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14626 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q43. Multiple inheritance means that ___</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;One subclass can have more than one superclass</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;A class can be derived from two or more classes.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;A class that may contain keyword virtual in it’s definition.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;All of the above.</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;14627 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q44. The inline specifier ________</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Does not change the behavior of a function.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Tells the compiler to make a use of a stack for calling a function.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;1 and 2</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;None of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15437 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q45. A class is logical abstraction while an object is real. </font></td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : T</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15501 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q46. what will be the output of code piece
<br>struct date
<br>{
<br>	unsigned int day:5;
<br>	unsigned int month:4;
<br>	unsigned int year:7;
<br>}today;
<br>cout&lt;&lt; sizeof(today)&lt;&lt; "bytes";
<br></font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;compile error</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;0 bytes</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;2 bytes</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;6 bytes</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15506 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q47. Default arguments of function are provided in</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;The declaration (prototype) of a function</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;The definition of a function</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;The call of a function</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;All of above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 1</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15508 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q48. The number of bytes allocated to declaration int *d[5]; will be</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;5 bytes</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;10 bytes</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;20 bytes</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;only 2 bytes</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 2</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15926 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q49. The keyword const can be used</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Outside main()</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Inside main()</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;Inside a block of code</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;All of the above</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 4</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr><tr bgcolor="Pink">
		<td>QuestionID&nbsp;&nbsp;:&nbsp;&nbsp;15937 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Subject Name&nbsp;&nbsp;OOP_CET</td>
	</tr><tr>
		<td><font color="Blue">Q50. Character constants and string constants are same representation</font></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;Characters can have numbers but string constants do not.</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2.&nbsp;&nbsp;Strings are nothing but character array</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3.&nbsp;&nbsp;False</td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4.&nbsp;&nbsp;True</td>
	</tr><tr>
		<td><b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Correct Answer : 3</b></td>
	</tr><tr>
		<td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Your Answer : </td>
	</tr>
</tbody></table><input id="btnClose" style="FONT-WEIGHT: bold; Z-INDEX: 103; LEFT: 2px; WIDTH: 130px; POSITION: absolute; TOP: 77px; HEIGHT: 33px" onclick="window.close()" type="button" value="Close this Window" name="btnClose">
			<span id="lblResult" style="Z-INDEX: 102; LEFT: 157px; POSITION: absolute; TOP: 80px"><b><font size="5">Hi dac10, You have scored : 0</font></b></span>
<div style="LEFT: 1px; WIDTH: 780px; POSITION: absolute; TOP: 0px; HEIGHT: 80px" ms_positioning="GridLayout">
	<img id="Header11_Image1" src="./5_files/Main.jpg" align="Middle" border="0" height="64" width="718" style="Z-INDEX: 101; LEFT: 15px; POSITION: absolute; TOP: 3px"></div>

</form>
	

</body></html>